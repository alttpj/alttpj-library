laguage: java

env:
  global:
    - JABBA_HOME=$HOME/.jabba
    # default JDK which will be referenced in the after_success section
    # if you wonder: openj9 is not hotspot, but still a openjdk type.
    # vendor is adoptopenjdk.net, they also have a openjdk-hotspot vm.
    # openj9 has a smaller footprint, faster startup and was originally developed by IBM as J9.
    # It now belongs to the eclipse foundation. OpenJ9 has great debugging options.
    - DEFAULT_JDK=adopt-openj9@1.11.0-6
    - TRAVIS_JDK=$DEFAULT_JDK
    - secure: "g5N+abhMubpyoqrTuOrFwihpqUqZ0qOi1ZcekWFJCERSCjHI79K5CQQqBFNfqUiDttTto2+u6RWSSPkaEe0lQRtfcVD53U8BcMRM7W2NBcGiKDLSb0LLsP+FGkri/cQc9plslhjU8PEmKOM7Oiq2WA7NbZrnzRH/Lqh4U5DQntn2oWBrqkGUlF0b8sNxLWSrxDeKYqLwoGbqZqH9obIP0FpeSZKiXelZ02bIajAc5zhfQeJdyFcLp5p4pmE6fX+CrYE5dS7MDSoUdzyWeU3e1n+W02RjnLygroZ0NYyrtrDtsxJ0AQJgK+tVzXGVAvB2IBiKAIv/pPYaRNHY6LVvxJ/wnJI29KwRFM1SUSBqODprikiWHLg7+sVCjOb+zWty4T30zsSDFQApelfju5pluksbShxSg9dVITJP3s/L1EmiATElC+HqLc6eDfxI++QkT3xMk24Q690kKJXc9AKjSTABDyJVNBAlhnYklnhJQPlyThhvBUjLOsS9zJDwBC85ULFgSLaanvgHT/YcWK4GiPKx+3P7doKDmHIFEoTjxiWuT0hQjNZf87kRZgV7UKJOkIffrbTr9VdHmdquUNiEmHdVPn7KrnFYM7hfZeDlOIf+pjmOHmuwm76bHkcJa8i+mI2RxszVBLDN1v5uk/vgf3TMR7q+Y2gVA+2cLEAsBvs="

cache:
  directories:
    - "$HOME/.m2"
    - "$HOME/.jabba"

matrix:
  include:
    - os: linux
      sudo: false
      env:
        - TRAVIS_JDK=$DEFAULT_JDK
    - os: linux
      sudo: false
      env:
        - TRAVIS_JDK=adopt@1.11.0-6
    - os: linux
      sudo: false
      env:
        - TRAVIS_JDK=amazon-corretto@1.11.0-6.10.1
    - os: linux
      sudo: false
      env:
        - TRAVIS_JDK=zulu@1.11.0-6
    - os: linux
      sudo: false
      env:
        - TRAVIS_JDK=adopt@1.14.0-0
    - os: linux
      sudo: false
      env:
        - TRAVIS_JDK=adopt-openj9@1.14.0-0
    - os: linux
      sudo: false
      env:
        - TRAVIS_JDK=openjdk@1.14.0

before_cache:
  - rm -rf "$HOME/.m2/repository/io/github/alttpj"

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then curl -sL https://raw.githubusercontent.com/shyiko/jabba/0.11.0/install.sh | bash && . $JABBA_HOME/jabba.sh; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then curl -sL https://raw.githubusercontent.com/shyiko/jabba/0.11.0/install.sh | bash && . $JABBA_HOME/jabba.sh; fi
  - gpg --version

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then $JABBA_HOME/bin/jabba install $TRAVIS_JDK; jabba use $TRAVIS_JDK; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then $JABBA_HOME/bin/jabba install $TRAVIS_JDK; jabba use $TRAVIS_JDK; fi
  - java -version

script:
  - ./mvnw --batch-mode -Pdocs,integration-tests -Dgpg.skip=true clean install

after_success:
  # do a coverage analyses for each PR or branch, but only once for each build matrix.
  - |
    if [ "$TRAVIS_JDK" == "$DEFAULT_JDK" ]; then
      bash <(curl -s https://codecov.io/bash)
    fi
  # if this is the master branch, deploy the artifacts which were build from the default build matrix item.
  - |
    if [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_TAG" == "" ] && [ "$TRAVIS_JDK" == "$DEFAULT_JDK" ]; then
      openssl aes-256-cbc -pbkdf2 -iter 100000 -k $signingkey_encryption_pw -in .deployment/signingkey.asc.enc -out .deployment/signingkey.asc -d
      gpg --batch --keyring=$TRAVIS_BUILD_DIR/pubring.gpg --no-default-keyring --import .deployment/signingkey.asc
      gpg --batch --allow-secret-key-import --keyring=$TRAVIS_BUILD_DIR/secring.gpg --no-default-keyring --import .deployment/signingkey.asc
      ./mvnw --batch-mode -Pdocs,deploy,ossrh deploy --settings .deployment/.travis.settings.xml -Dgpg.publicKeyring=$TRAVIS_BUILD_DIR/pubring.gpg -Dgpg.secretKeyring=$TRAVIS_BUILD_DIR/secring.gpg
    fi
